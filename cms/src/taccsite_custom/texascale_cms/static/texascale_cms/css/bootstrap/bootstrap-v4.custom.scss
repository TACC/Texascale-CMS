@use 'sass:map';
@import 'pkg:bootstrap/scss/functions';
@import 'pkg:bootstrap/scss/variables';

/* To add `-6` and `-7` to `mb-`, `px-â€¦`, et cetera */
$spacers: map.merge(
  $spacers,
  (
    6: $spacer * 4.5,
    7: $spacer * 6
  )
);

/* To add larger breakpoints (Bootstrap v5 + custom) */
/* CAVEAT: Core-Styles ALSO does this BUT ONLY for `.container` */
/* https://github.com/TACC/Core-Styles/blob/v2.47.3/src/lib/_imports/components/bootstrap.container.css */
/* https://github.com/TACC/Core-Styles/blob/v2.47.3/src/lib/_imports/settings/max-width.css */
/* https://github.com/TACC/Core-Styles/blob/v2.47.3/src/lib/_imports/tools/media-queries.css */
$grid-breakpoints: map.merge(
  $grid-breakpoints,
  (
    xxl: 1400px,
    3xl: 1680px
  )
);
$container-max-widths: map.merge(
  $container-max-widths,
  (
    xxl: 1320px,
    3xl: 1580px
  )
);

@import 'pkg:bootstrap/scss/bootstrap';

/* To add a container with background-color across page (or parent) */
/* FAQ: This builds custom container that uses padding instead of margin */
/* TODO: Integrate into Core-CMS */
.container-padded {
  width: 100%;
  padding-left: calc($grid-gutter-width / 2);
  padding-right: calc($grid-gutter-width / 2);

  @include media-breakpoint-up(sm) {
    padding-left: max(calc((100vw - map.get($container-max-widths, sm)) / 2), calc($grid-gutter-width / 2));
    padding-right: max(calc((100vw - map.get($container-max-widths, sm)) / 2), calc($grid-gutter-width / 2));
  }

  @include media-breakpoint-up(md) {
    padding-left: max(calc((100vw - map.get($container-max-widths, md)) / 2), calc($grid-gutter-width / 2));
    padding-right: max(calc((100vw - map.get($container-max-widths, md)) / 2), calc($grid-gutter-width / 2));
  }

  @include media-breakpoint-up(lg) {
    padding-left: max(calc((100vw - map.get($container-max-widths, lg)) / 2), calc($grid-gutter-width / 2));
    padding-right: max(calc((100vw - map.get($container-max-widths, lg)) / 2), calc($grid-gutter-width / 2));
  }

  @include media-breakpoint-up(xl) {
    padding-left: max(calc((100vw - map.get($container-max-widths, xl)) / 2), calc($grid-gutter-width / 2));
    padding-right: max(calc((100vw - map.get($container-max-widths, xl)) / 2), calc($grid-gutter-width / 2));
  }

  @include media-breakpoint-up(xxl) {
    padding-left: max(calc((100vw - map.get($container-max-widths, xxl)) / 2), calc($grid-gutter-width / 2));
    padding-right: max(calc((100vw - map.get($container-max-widths, xxl)) / 2), calc($grid-gutter-width / 2));
  }

  @include media-breakpoint-up(3xl) {
    padding-left: max(calc((100vw - map.get($container-max-widths, 3xl)) / 2), calc($grid-gutter-width / 2));
    padding-right: max(calc((100vw - map.get($container-max-widths, 3xl)) / 2), calc($grid-gutter-width / 2));
  }
}
